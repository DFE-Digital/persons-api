name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}

env:
  NODE_VERSION: 18.x

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      release: ${{ steps.var.outputs.release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: var
        run: |
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"development"}
          RELEASE=${ENVIRONMENT,,}-`date +%Y-%m-%d`.${{ github.run_number }}
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "release=${RELEASE}" >> $GITHUB_OUTPUT

  deploy-image:
    permissions:
      id-token: write
      contents: read
      packages: write
    name: Deploy Container
    needs: [ set-env ]
    uses: DFE-Digital/deploy-azure-container-apps-action/.github/workflows/build-push-deploy.yml@v3.1.0
    with:
      docker-image-name: 'persons-api'
      docker-build-file-name: './Dockerfile'
      docker-build-args: CI=true
      environment: ${{ needs.set-env.outputs.environment }}
      annotate-release: false
    secrets:
      azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure-acr-client-id: ${{ secrets.ACR_CLIENT_ID }}
      azure-acr-name: ${{ secrets.ACR_NAME }}
      azure-aca-client-id: ${{ secrets.ACA_CLIENT_ID }}
      azure-aca-name: ${{ secrets.ACA_CONTAINERAPP_NAME }}
      azure-aca-resource-group: ${{ secrets.ACA_RESOURCE_GROUP }}

  create-tag:
    name: Tag and release
    needs: [ set-env, deploy-image ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Create tag
        run: |
          git tag ${{ needs.set-env.outputs.release }}
          git push origin ${{ needs.set-env.outputs.release }}

      - name: Create release
        uses: "actions/github-script@v7"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: "${{ needs.set-env.outputs.release }}",
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: "${{ needs.set-env.outputs.release }}",
              });
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Trigger Build and Push NuGet Package workflow
        uses: "actions/github-script@v7"
        if: needs.set-env.outputs.environment == 'production'
        with:
            github-token: "${{ secrets.GITHUB_TOKEN }}"
            script: |
              const tagName = "${{ needs.set-env.outputs.release }}"
              console.log("Triggering Build and Push NuGet Package workflow with tag:", tagName);
              await github.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: "build-and-push-package.yml",
                ref: "main",
                inputs: {
                  tag_name: tagName
                }
              });